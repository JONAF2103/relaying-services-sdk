(()=>{"use strict";var e={839:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ERC20Token=void 0,t.ERC20Token=class{static getAbi(){return[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"supply",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"multiplier",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"address"}],name:"balances",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"decimals",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"_decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"transferFunds",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"version",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner_address",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"num",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"num",type:"uint256"},{name:"target",type:"address"}],name:"mintFor",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[{name:"initial_supply",type:"uint256"},{name:"decimal_units",type:"uint8"},{name:"token_name",type:"string"},{name:"token_symbol",type:"string"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,name:"_to",type:"address"},{indexed:!0,name:"_num",type:"uint256"}],name:"Minted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"_from",type:"address"},{indexed:!0,name:"_to",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"_owner",type:"address"},{indexed:!0,name:"_spender",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Approval",type:"event"}]}}},601:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},104:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Contracts=void 0;const s=a(593),n=a(601),r=a(820);t.Contracts=class{constructor(e,t){this.web3Instance=e,this.addresses=s.getContractAddresses(null!=t?t:n.DEFAULT_NETWORK_ID),this.initialize().then((()=>{console.debug("Contracts initialized correctly")})).catch((e=>{console.error("Contracts fail to initialize",e)}))}async initialize(){this.smartWalletRelayVerifier=await new this.web3Instance.eth.Contract(r.RelayVerifier.abi,this.addresses.smartWalletRelayVerifier),this.smartWalletDeployVerifier=await new this.web3Instance.eth.Contract(r.DeployVerifier.abi,this.addresses.smartWalletDeployVerifier)}getSmartWalletFactory(){return this.smartWalletFactory||(this.smartWalletFactory=s.getContract(this.web3Instance,r.SmartWalletFactory.abi,this.addresses.smartWalletFactory)),this.smartWalletFactory}getSmartWalletRelayVerifier(){return this.smartWalletRelayVerifier||(this.smartWalletRelayVerifier=s.getContract(this.web3Instance,r.RelayVerifier.abi,this.addresses.smartWalletRelayVerifier)),this.smartWalletRelayVerifier}getSmartWalletDeployVerifier(){return this.smartWalletDeployVerifier||(this.smartWalletDeployVerifier=s.getContract(this.web3Instance,r.DeployVerifier.abi,this.addresses.smartWalletDeployVerifier)),this.smartWalletDeployVerifier}}},231:function(e,t,a){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultRelayingServices=void 0;const n=a(342),r=s(a(409)),i=a(820),o=a(593),l=a(839),c=a(601),d=a(104);t.DefaultRelayingServices=class{constructor({rskHost:e,account:t,envelopingConfig:a,web3Provider:s}){this.envelopingConfig=a,this.web3Instance=s?new r.default(s):new r.default(e),this.account=t,this.initialize().then((()=>{console.debug("RelayingServicesSDK initialized correctly")})).catch((e=>{console.error("RelayingServicesSDK fail to initialize",e)}))}async initialize(){this.developmentAccounts=await this.web3Instance.eth.getAccounts(),this.chainId=await this.web3Instance.eth.getChainId();const e=await n.resolveConfiguration(this.web3Instance.currentProvider,{onlyPreferredRelays:!0,preferredRelays:this.envelopingConfig.preferredRelays,gasPriceFactorPercent:0,relayLookupWindowBlocks:1e5,chainId:this.chainId,relayVerifierAddress:this.contracts.addresses.smartWalletRelayVerifier,deployVerifierAddress:this.contracts.addresses.smartWalletDeployVerifier,smartWalletFactoryAddress:this.contracts.addresses.smartWalletFactory});e.relayHubAddress=this.contracts.addresses.relayHub;const t=new n.RelayProvider(this.web3Instance.currentProvider,e);this.account&&t.addAccount({address:this.account.address,privateKey:Buffer.from(this.account.privateKey.replaceAll("0x",""),"hex")}),this.web3Instance.setProvider(t),this.relayProvider=t,this.contracts=new d.Contracts(this.web3Instance,this.chainId)}async allowToken(e,t){console.debug("allowToken Params",{tokenAddress:e,contractsOwnerAccount:t});const a=o.getAbiItem(i.RelayVerifier.abi,"acceptToken"),s=web3.eth.abi.encodeFunctionCall(a,[e]),n={from:t.address,to:this.contracts.addresses.smartWalletRelayVerifier,data:s},r=await t.signTransaction(n),l=await this.web3Instance.eth.sendSignedTransaction(r.rawTransaction);if(!l.status){const e="Error sending allowToken transaction";throw console.debug(e,l),new Error(e)}}async claim(e){throw console.debug("claim Params",{commitmentReceipt:e}),new Error("NOT IMPLEMENTED: this will be available with arbiter integration.")}async deploySmartWallet(e,t,a){if(console.debug("deploySmartWallet Params",{smartWallet:e,tokenAddress:t,tokenAmount:a}),console.debug("Checking if the wallet already exists"),await o.addressHasCode(this.web3Instance,e.address))throw new Error("Smart Wallet already deployed");{const s=o.getContract(this.web3Instance,l.ERC20Token.getAbi(),t);await s.methods.balanceOf(e.address).call()<=0&&console.warn("Smart Wallet doesn't have funds so this will be a subsidized deploy."),console.debug("Deploying smart wallet for address",e.address);const n=await this.relayProvider.deploySmartWallet({from:this.getAccountAddress(),to:c.ZERO_ADDRESS,callVerifier:this.contracts.addresses.smartWalletDeployVerifier,callForwarder:this.contracts.addresses.smartWalletFactory,tokenContract:t,tokenAmount:a.toString(),data:"0x",index:e.index.toString(),recoverer:c.ZERO_ADDRESS,isSmartWalletDeploy:!0,onlyPreferredRelays:!0,smartWalletAddress:e.address});return console.debug("Smart wallet successfully deployed",n),e.deployTransaction=await this.web3Instance.eth.getTransactionReceipt(n),e.deployed=e.deployTransaction.status,e.tokenAddress=t,e}}async generateSmartWallet(e){console.debug("generateSmartWallet Params",{smartWalletIndex:e}),console.debug("Generating computed address for smart wallet");const t=this.contracts.getSmartWalletFactory().methods.getSmartWalletAddress(this.getAccountAddress(),c.ZERO_ADDRESS,e).call();return console.debug("Checking if the wallet already exists"),{address:t,index:e,deployed:await o.addressHasCode(this.web3Instance,t)}}async getAllowedTokens(){const e=this.contracts.getSmartWalletRelayVerifier(),t=this.contracts.getSmartWalletDeployVerifier(),a=await e.methods.getAcceptedTokens().call(),s=await t.methods.getAcceptedTokens().call();return[...new Set([...a,...s])]}async isAllowedToken(e){console.debug("isAllowedToken Params",{tokenAddress:e});const t=this.contracts.getSmartWalletRelayVerifier(),a=this.contracts.getSmartWalletDeployVerifier(),s=await t.methods.acceptsToken(e).call(),n=await a.methods.acceptsToken(e).call();return s&&n}async isSmartWalletDeployed(e){return console.debug("isSmartWalletDeployed Params",{smartWalletAddress:e}),await o.addressHasCode(this.web3Instance,e)}async relayTransaction(e,t,a){if(console.debug("relayTransaction Params",{unsignedTx:e,smartWallet:t,tokenAmount:a}),console.debug("Checking if the wallet exists"),await o.addressHasCode(this.web3Instance,t.address)){const s=await this.web3Instance.eth.sendTransaction(Object.assign({from:this.getAccountAddress(),callVerifier:this.contracts.addresses.smartWalletRelayVerifier,callForwarder:t.address,isSmartWalletDeploy:!1,onlyPreferredRelays:!0,tokenAmount:a,tokenContract:t.tokenAddress},e));if(!s.status){const e="Error relaying transaction";throw console.debug(e,s),new Error(e)}return s}throw new Error(`Smart Wallet is not deployed or the address ${t.address} is not a smart wallet.`)}getAccountAddress(){return this.account?this.account.address:this.developmentAccounts[0]}}},593:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getContractAddresses=t.getContract=t.addressHasCode=t.getAbiItem=void 0;const s=a(820);t.getAbiItem=function(e,t){const a=e.filter((e=>e.name===t));if(a.length>0)return a[0];throw new Error(`Item ${t} doesn't exists on contract abi`)},t.addressHasCode=async function(e,t){const a=await e.eth.getCode(t);return"0x00"!==a&&"0x"!==a},t.getContract=function(e,t,a){return new e.eth.Contract(t,a)},t.getContractAddresses=function(e){return s.ContractAddresses[e]}},342:e=>{e.exports=require("@rsksmart/rif-relay-client")},820:e=>{e.exports=require("@rsksmart/rif-relay-contracts")},409:e=>{e.exports=require("web3")}},t={};function a(s){var n=t[s];if(void 0!==n)return n.exports;var r=t[s]={exports:{}};return e[s].call(r.exports,r,r.exports,a),r.exports}var s={};(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.DefaultRelayingServices=void 0;const t=a(231);Object.defineProperty(e,"DefaultRelayingServices",{enumerable:!0,get:function(){return t.DefaultRelayingServices}})})(),module.exports=s})();